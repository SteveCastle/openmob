import React from "react"
import PropTypes from 'prop-types';
import { useQuery } from "react-apollo-hooks"
import { Link } from "@reach/router"
import gql from "graphql-tag"
import Content from "@openmob/bluebird/src/components/layout/Content"
import Card from "@openmob/bluebird/src/components/cards/Card"
import Button from '@openmob/bluebird/src/components/buttons/Button'

const isObject = a => !!a && a.constructor === Object
const getValue = obj =>
  Object.entries(obj).reduce(entry =>
    entry[0] === "seconds" || entry[0] === "ID" ? entry[1] : null
  )
const parseObject = obj => (isObject(obj) ? getValue(obj) : obj)

const LIST_{{toUpper .Table.Name}}= gql`
  {
    list{{.Table.Name}}(limit: 20) {
      {{range $i, $value := .Table.Columns}}{{.Name}}{{if eq .Type "Time!"}}{seconds}{{end}}{{if eq .Type "Time"}}{seconds}{{end}}{{if eq .Type "ID"}}{ID}{{end}}{{if eq .Type "ID!"}}{{if ne $i 0}}{ID}{{end}}{{end}}
      {{end}}
    }
  }
`

function List{{.Table.Name}}({ navigate }) {
  const { data: {list{{.Table.Name}}: items = []}, error, loading } = useQuery(LIST_{{toUpper .Table.Name}})

  if (loading) {
    return <div>Loading...</div>
  }

  if (error) {
    return <div>Error! {error.message}</div>
  }

  if (items === null || items.length === 0) {
    return <Content><Button label="Create the first {{.Table.Name}}" onClick={() => navigate('create')} variant="primary" /></Content>
  }

  return (
    <Content>
    <Card>
      <h1>List {{.Table.Name}}</h1>
      <Button label="Create a new {{.Table.Name}}" onClick={() => navigate('create')} block variant="primary" />
      <table>
      <thead>
      <tr>
{{range $i, $value := .Table.Columns}}<th>{{.Name}}</th>{{end}}
      </tr>
      </thead>
      {(items || []).map(item => (
        <tr>
          {{range $i, $value := .Table.Columns}}<td>{{if eq $i 0}}<Link to={`/app/admin/{{kebab .Table.Name}}/${item.ID}`}>{item.{{.Name}}}</Link>{{end}}{{if ne $i 0}}{parseObject(item.{{.Name}})}{{end}}</td>
{{end}}
        </tr>
      ))}
      </table>
      </Card>
    </Content>
  )
}

List{{.Table.Name}}.propTypes = {
  navigate: PropTypes.func.isRequired
}

export default List{{.Table.Name}}
