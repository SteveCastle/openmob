syntax = "proto3";

package shrike.v1;

option go_package = "v1";

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "google/protobuf/timestamp.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "Shrike service";
		version: "1.0";
		contact: {
			name: "openmob";
			url: "https://github.com/SteveCastle/openmob";
			email: "stephen@openmob.us";
        };
    };
    schemes: HTTP;
    consumes: "application/json";
    produces: "application/json";
    responses: {
		key: "404";
		value: {
			description: "Returned when the resource does not exist.";
			schema: {
				json_schema: {
					type: STRING;
				}
			}
		}
	}
};

// Generated Types and Message Schema
{{range .Schema.Tables}}
message {{.Name}} {
	// Generated Types and Message Schema
    {{range $index, $value := .Columns}}
	{{.Type}} {{.Name}} = {{$index}};
	{{end}}
}

//Request and Response Message Types
message Create{{.Name}}Request {
	string api = 1;
	{{.Name}} item = 2;
}

message Create{{.Name}}Response {
	string api = 1;
	int64 id = 2;
	
}
message Get{{.Name}}Request {
	string api = 1;
	int64 id = 2;
}

message Get{{.Name}}Response {
	string api = 1;
	{{.Name}} item = 2;
}

message List{{.Name}}Request {
	string api = 1;
	int64 limit = 2;
}

message List{{.Name}}Response {
	string api = 1;
	repeated {{.Name}} items = 2;
}

// Request data to update {{.Name}}
message Update{{.Name}}Request{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // {{.Name}} entity to update
    {{.Name}} item = 2;
}

// Contains status of update operation
message Update{{.Name}}Response{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Contains number of entities have beed updated
    // Equals 1 in case of succesfull update
    int64 updated = 2;
}

// Request data to delete {{.Name}}
message Delete{{.Name}}Request{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Unique integer identifier of the {{.Name}} to delete
    int64 id = 2;
}

// Contains status of delete operation
message Delete{{.Name}}Response{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Contains number of entities have beed deleted
    // Equals 1 in case of succesfull delete
    int64 deleted = 2;
}
{{end}}

// Generated Shrike Service Definition
service ShrikeService {
	{{ range .Schema.Tables }}
	// Create{{.Name}} takes a {{.Name}} object to create.
	rpc Create{{.Name}}(Create{{.Name}}Request) returns (Create{{.Name}}Response) {
		option (google.api.http) ={
			post: "/v1/{{toLower .Name}}"
			body: "*"
		};
	}
    // Get{{.Name}} takes an id and returns a single {{.Name}}.
	rpc Get{{.Name}}(Get{{.Name}}Request) returns (Get{{.Name}}Response) {
		option (google.api.http) ={
			get: "/v1/{{toLower .Name}}/{id}"
		};
	}
    // List {{.Name}}, takes filters, limit, and cursor param.
	rpc List{{.Name}}(List{{.Name}}Request) returns (List{{.Name}}Response) {
	option (google.api.http) ={
		get: "/v1/{{toLower .Name}}"
	};
}
    // Update {{.Name}}
    rpc Update{{.Name}}(Update{{.Name}}Request) returns (Update{{.Name}}Response){
        option (google.api.http) = {
            put: "/v1/{{toLower .Name}}/{item.id}"
            body: "*"

            additional_bindings {
                patch: "/v1/{{toLower .Name}}/{item.id}"
                body: "*"
            }
        };
    }

    // Delete {{.Name}}
    rpc Delete{{.Name}}(Delete{{.Name}}Request) returns (Delete{{.Name}}Response){
        option (google.api.http) = {
            delete: "/v1/{{toLower .Name}}/{id}"
        };
    }
	{{end}}
}