// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cause.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Cause struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cause) Reset()         { *m = Cause{} }
func (m *Cause) String() string { return proto.CompactTextString(m) }
func (*Cause) ProtoMessage()    {}
func (*Cause) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_fc082657bd82dc2a, []int{0}
}
func (m *Cause) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cause.Unmarshal(m, b)
}
func (m *Cause) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cause.Marshal(b, m, deterministic)
}
func (dst *Cause) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cause.Merge(dst, src)
}
func (m *Cause) XXX_Size() int {
	return xxx_messageInfo_Cause.Size(m)
}
func (m *Cause) XXX_DiscardUnknown() {
	xxx_messageInfo_Cause.DiscardUnknown(m)
}

var xxx_messageInfo_Cause proto.InternalMessageInfo

func (m *Cause) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Cause) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type CreateCauseRequest struct {
	Item                 *Cause   `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCauseRequest) Reset()         { *m = CreateCauseRequest{} }
func (m *CreateCauseRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCauseRequest) ProtoMessage()    {}
func (*CreateCauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_fc082657bd82dc2a, []int{1}
}
func (m *CreateCauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCauseRequest.Unmarshal(m, b)
}
func (m *CreateCauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCauseRequest.Marshal(b, m, deterministic)
}
func (dst *CreateCauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCauseRequest.Merge(dst, src)
}
func (m *CreateCauseRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCauseRequest.Size(m)
}
func (m *CreateCauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCauseRequest proto.InternalMessageInfo

func (m *CreateCauseRequest) GetItem() *Cause {
	if m != nil {
		return m.Item
	}
	return nil
}

type CreateCauseResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCauseResponse) Reset()         { *m = CreateCauseResponse{} }
func (m *CreateCauseResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCauseResponse) ProtoMessage()    {}
func (*CreateCauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_fc082657bd82dc2a, []int{2}
}
func (m *CreateCauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCauseResponse.Unmarshal(m, b)
}
func (m *CreateCauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCauseResponse.Marshal(b, m, deterministic)
}
func (dst *CreateCauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCauseResponse.Merge(dst, src)
}
func (m *CreateCauseResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCauseResponse.Size(m)
}
func (m *CreateCauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCauseResponse proto.InternalMessageInfo

func (m *CreateCauseResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetCauseRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCauseRequest) Reset()         { *m = GetCauseRequest{} }
func (m *GetCauseRequest) String() string { return proto.CompactTextString(m) }
func (*GetCauseRequest) ProtoMessage()    {}
func (*GetCauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_fc082657bd82dc2a, []int{3}
}
func (m *GetCauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCauseRequest.Unmarshal(m, b)
}
func (m *GetCauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCauseRequest.Marshal(b, m, deterministic)
}
func (dst *GetCauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCauseRequest.Merge(dst, src)
}
func (m *GetCauseRequest) XXX_Size() int {
	return xxx_messageInfo_GetCauseRequest.Size(m)
}
func (m *GetCauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCauseRequest proto.InternalMessageInfo

func (m *GetCauseRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetCauseResponse struct {
	Item                 *Cause   `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCauseResponse) Reset()         { *m = GetCauseResponse{} }
func (m *GetCauseResponse) String() string { return proto.CompactTextString(m) }
func (*GetCauseResponse) ProtoMessage()    {}
func (*GetCauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_fc082657bd82dc2a, []int{4}
}
func (m *GetCauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCauseResponse.Unmarshal(m, b)
}
func (m *GetCauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCauseResponse.Marshal(b, m, deterministic)
}
func (dst *GetCauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCauseResponse.Merge(dst, src)
}
func (m *GetCauseResponse) XXX_Size() int {
	return xxx_messageInfo_GetCauseResponse.Size(m)
}
func (m *GetCauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCauseResponse proto.InternalMessageInfo

func (m *GetCauseResponse) GetItem() *Cause {
	if m != nil {
		return m.Item
	}
	return nil
}

func init() {
	proto.RegisterType((*Cause)(nil), "cause.v1.Cause")
	proto.RegisterType((*CreateCauseRequest)(nil), "cause.v1.CreateCauseRequest")
	proto.RegisterType((*CreateCauseResponse)(nil), "cause.v1.CreateCauseResponse")
	proto.RegisterType((*GetCauseRequest)(nil), "cause.v1.GetCauseRequest")
	proto.RegisterType((*GetCauseResponse)(nil), "cause.v1.GetCauseResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CauseServiceClient is the client API for CauseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CauseServiceClient interface {
	CreateCause(ctx context.Context, in *CreateCauseRequest, opts ...grpc.CallOption) (*CreateCauseResponse, error)
	GetCause(ctx context.Context, in *GetCauseRequest, opts ...grpc.CallOption) (*GetCauseResponse, error)
}

type causeServiceClient struct {
	cc *grpc.ClientConn
}

func NewCauseServiceClient(cc *grpc.ClientConn) CauseServiceClient {
	return &causeServiceClient{cc}
}

func (c *causeServiceClient) CreateCause(ctx context.Context, in *CreateCauseRequest, opts ...grpc.CallOption) (*CreateCauseResponse, error) {
	out := new(CreateCauseResponse)
	err := c.cc.Invoke(ctx, "/cause.v1.CauseService/CreateCause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *causeServiceClient) GetCause(ctx context.Context, in *GetCauseRequest, opts ...grpc.CallOption) (*GetCauseResponse, error) {
	out := new(GetCauseResponse)
	err := c.cc.Invoke(ctx, "/cause.v1.CauseService/GetCause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CauseServiceServer is the server API for CauseService service.
type CauseServiceServer interface {
	CreateCause(context.Context, *CreateCauseRequest) (*CreateCauseResponse, error)
	GetCause(context.Context, *GetCauseRequest) (*GetCauseResponse, error)
}

func RegisterCauseServiceServer(s *grpc.Server, srv CauseServiceServer) {
	s.RegisterService(&_CauseService_serviceDesc, srv)
}

func _CauseService_CreateCause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CauseServiceServer).CreateCause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cause.v1.CauseService/CreateCause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CauseServiceServer).CreateCause(ctx, req.(*CreateCauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CauseService_GetCause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CauseServiceServer).GetCause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cause.v1.CauseService/GetCause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CauseServiceServer).GetCause(ctx, req.(*GetCauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CauseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cause.v1.CauseService",
	HandlerType: (*CauseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCause",
			Handler:    _CauseService_CreateCause_Handler,
		},
		{
			MethodName: "GetCause",
			Handler:    _CauseService_GetCause_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cause.proto",
}

func init() { proto.RegisterFile("cause.proto", fileDescriptor_cause_fc082657bd82dc2a) }

var fileDescriptor_cause_fc082657bd82dc2a = []byte{
	// 441 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x8a, 0x13, 0x41,
	0x10, 0xc6, 0xe9, 0xc9, 0xfe, 0xad, 0x68, 0x36, 0xf4, 0x2e, 0xb2, 0x0e, 0x2b, 0xb4, 0x23, 0xca,
	0x12, 0xcc, 0xf4, 0x26, 0x06, 0xc4, 0x78, 0x51, 0x03, 0x7a, 0xcf, 0x9e, 0x14, 0x0f, 0x4e, 0x66,
	0x8a, 0x99, 0x96, 0xa4, 0xbb, 0x9d, 0xae, 0x99, 0x15, 0xc4, 0x8b, 0x8f, 0xa0, 0x37, 0x1f, 0xc7,
	0xa3, 0x1e, 0x7d, 0x05, 0x1f, 0x44, 0xec, 0xc9, 0xba, 0x7f, 0xa2, 0xb0, 0xa7, 0xa6, 0xaa, 0x7e,
	0xdf, 0xd7, 0x5f, 0x41, 0x41, 0x3b, 0x4d, 0x2a, 0x87, 0xb1, 0x2d, 0x0d, 0x19, 0xbe, 0xd5, 0x14,
	0xf5, 0x20, 0x3c, 0xc8, 0x8d, 0xc9, 0xe7, 0x28, 0x13, 0xab, 0x64, 0xa2, 0xb5, 0xa1, 0x84, 0x94,
	0xd1, 0xae, 0xe1, 0xc2, 0xfb, 0xfe, 0x49, 0xfb, 0x39, 0xea, 0xbe, 0x3b, 0x49, 0xf2, 0x1c, 0x4b,
	0x69, 0xac, 0x27, 0x56, 0xe9, 0xa8, 0x0f, 0xeb, 0x93, 0x3f, 0xbe, 0xbc, 0x03, 0x81, 0xca, 0xf6,
	0x99, 0x60, 0x87, 0xad, 0x69, 0xa0, 0x32, 0xbe, 0x07, 0xeb, 0xa4, 0x68, 0x8e, 0xfb, 0x81, 0x60,
	0x87, 0xdb, 0xd3, 0xa6, 0x88, 0x1e, 0x01, 0x9f, 0x94, 0x98, 0x10, 0x7a, 0xd1, 0x14, 0xdf, 0x55,
	0xe8, 0x88, 0xdf, 0x81, 0x35, 0x45, 0xb8, 0xf0, 0xea, 0xf6, 0x70, 0x27, 0x3e, 0x4d, 0x1a, 0x37,
	0x94, 0x1f, 0x46, 0x77, 0x61, 0xf7, 0x82, 0xd4, 0x59, 0xa3, 0x57, 0xff, 0x8d, 0x6e, 0xc3, 0xce,
	0x0b, 0xa4, 0x0b, 0xf6, 0x97, 0x91, 0x87, 0xd0, 0x3d, 0x43, 0x96, 0x36, 0x57, 0x89, 0x30, 0xfc,
	0xc1, 0xe0, 0x9a, 0xaf, 0x8f, 0xb1, 0xac, 0x55, 0x8a, 0xfc, 0x0d, 0xb4, 0xcf, 0x65, 0xe2, 0x07,
	0xe7, 0x64, 0x2b, 0x5b, 0x86, 0xb7, 0xfe, 0x33, 0x6d, 0x12, 0x44, 0x7b, 0x9f, 0x7e, 0xfe, 0xfa,
	0x12, 0x74, 0xa2, 0x6d, 0x59, 0x0f, 0xa4, 0x27, 0xc7, 0xac, 0xc7, 0x5f, 0xc2, 0xd6, 0x69, 0x56,
	0x7e, 0xf3, 0xcc, 0xe0, 0xd2, 0x8a, 0x61, 0xf8, 0xaf, 0xd1, 0xd2, 0xf8, 0x86, 0x37, 0xee, 0xf2,
	0xce, 0x5f, 0x63, 0xf9, 0x41, 0x65, 0x1f, 0x9f, 0x7d, 0x67, 0x9f, 0x9f, 0x7e, 0x63, 0xfc, 0x35,
	0x5c, 0xf7, 0xbc, 0x70, 0xcd, 0x52, 0xd1, 0x73, 0xd8, 0x34, 0x16, 0xf5, 0xc2, 0xcc, 0xf8, 0xbd,
	0x82, 0xc8, 0xba, 0xb1, 0x94, 0xb9, 0xa2, 0xa2, 0x9a, 0xc5, 0xa9, 0x59, 0xc8, 0x63, 0xc2, 0x1a,
	0x27, 0x89, 0xa3, 0x39, 0xca, 0x25, 0x17, 0xee, 0x3a, 0x42, 0x5b, 0xa0, 0x7e, 0xb2, 0x6c, 0xc4,
	0xa6, 0xcc, 0x87, 0xad, 0x41, 0x7c, 0xd4, 0x63, 0x6c, 0xd8, 0x4d, 0xac, 0x9d, 0xab, 0xd4, 0x9f,
	0x8d, 0x7c, 0xeb, 0x8c, 0x1e, 0xaf, 0x74, 0xa6, 0x8f, 0xa1, 0x35, 0x3a, 0x1a, 0xf1, 0x11, 0xf4,
	0xa6, 0x48, 0x55, 0xa9, 0x31, 0x13, 0x27, 0x05, 0x6a, 0x41, 0x05, 0x8a, 0x12, 0x9d, 0xa9, 0xca,
	0x14, 0x45, 0x66, 0xd0, 0x09, 0x6d, 0x48, 0xe0, 0x7b, 0xe5, 0x28, 0xe6, 0x1b, 0xb0, 0xf6, 0x35,
	0x60, 0x9b, 0xaf, 0x82, 0x7a, 0x30, 0xdb, 0xf0, 0xe7, 0xf8, 0xe0, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x2b, 0x09, 0x44, 0x67, 0xf3, 0x02, 0x00, 0x00,
}
