// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cause.proto

package cause

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Cause struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cause) Reset()         { *m = Cause{} }
func (m *Cause) String() string { return proto.CompactTextString(m) }
func (*Cause) ProtoMessage()    {}
func (*Cause) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{0}
}
func (m *Cause) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cause.Unmarshal(m, b)
}
func (m *Cause) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cause.Marshal(b, m, deterministic)
}
func (dst *Cause) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cause.Merge(dst, src)
}
func (m *Cause) XXX_Size() int {
	return xxx_messageInfo_Cause.Size(m)
}
func (m *Cause) XXX_DiscardUnknown() {
	xxx_messageInfo_Cause.DiscardUnknown(m)
}

var xxx_messageInfo_Cause proto.InternalMessageInfo

func (m *Cause) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Cause) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type CreateCauseRequest struct {
	Item                 *Cause   `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCauseRequest) Reset()         { *m = CreateCauseRequest{} }
func (m *CreateCauseRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCauseRequest) ProtoMessage()    {}
func (*CreateCauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{1}
}
func (m *CreateCauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCauseRequest.Unmarshal(m, b)
}
func (m *CreateCauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCauseRequest.Marshal(b, m, deterministic)
}
func (dst *CreateCauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCauseRequest.Merge(dst, src)
}
func (m *CreateCauseRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCauseRequest.Size(m)
}
func (m *CreateCauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCauseRequest proto.InternalMessageInfo

func (m *CreateCauseRequest) GetItem() *Cause {
	if m != nil {
		return m.Item
	}
	return nil
}

type CreateCauseResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCauseResponse) Reset()         { *m = CreateCauseResponse{} }
func (m *CreateCauseResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCauseResponse) ProtoMessage()    {}
func (*CreateCauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{2}
}
func (m *CreateCauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCauseResponse.Unmarshal(m, b)
}
func (m *CreateCauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCauseResponse.Marshal(b, m, deterministic)
}
func (dst *CreateCauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCauseResponse.Merge(dst, src)
}
func (m *CreateCauseResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCauseResponse.Size(m)
}
func (m *CreateCauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCauseResponse proto.InternalMessageInfo

func (m *CreateCauseResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateCausesRequest struct {
	Items                []*Cause `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCausesRequest) Reset()         { *m = CreateCausesRequest{} }
func (m *CreateCausesRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCausesRequest) ProtoMessage()    {}
func (*CreateCausesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{3}
}
func (m *CreateCausesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCausesRequest.Unmarshal(m, b)
}
func (m *CreateCausesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCausesRequest.Marshal(b, m, deterministic)
}
func (dst *CreateCausesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCausesRequest.Merge(dst, src)
}
func (m *CreateCausesRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCausesRequest.Size(m)
}
func (m *CreateCausesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCausesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCausesRequest proto.InternalMessageInfo

func (m *CreateCausesRequest) GetItems() []*Cause {
	if m != nil {
		return m.Items
	}
	return nil
}

type CreateCausesResponse struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCausesResponse) Reset()         { *m = CreateCausesResponse{} }
func (m *CreateCausesResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCausesResponse) ProtoMessage()    {}
func (*CreateCausesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{4}
}
func (m *CreateCausesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCausesResponse.Unmarshal(m, b)
}
func (m *CreateCausesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCausesResponse.Marshal(b, m, deterministic)
}
func (dst *CreateCausesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCausesResponse.Merge(dst, src)
}
func (m *CreateCausesResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCausesResponse.Size(m)
}
func (m *CreateCausesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCausesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCausesResponse proto.InternalMessageInfo

func (m *CreateCausesResponse) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type GetCauseRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCauseRequest) Reset()         { *m = GetCauseRequest{} }
func (m *GetCauseRequest) String() string { return proto.CompactTextString(m) }
func (*GetCauseRequest) ProtoMessage()    {}
func (*GetCauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{5}
}
func (m *GetCauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCauseRequest.Unmarshal(m, b)
}
func (m *GetCauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCauseRequest.Marshal(b, m, deterministic)
}
func (dst *GetCauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCauseRequest.Merge(dst, src)
}
func (m *GetCauseRequest) XXX_Size() int {
	return xxx_messageInfo_GetCauseRequest.Size(m)
}
func (m *GetCauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCauseRequest proto.InternalMessageInfo

func (m *GetCauseRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetCauseResponse struct {
	Item                 *Cause   `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCauseResponse) Reset()         { *m = GetCauseResponse{} }
func (m *GetCauseResponse) String() string { return proto.CompactTextString(m) }
func (*GetCauseResponse) ProtoMessage()    {}
func (*GetCauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{6}
}
func (m *GetCauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCauseResponse.Unmarshal(m, b)
}
func (m *GetCauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCauseResponse.Marshal(b, m, deterministic)
}
func (dst *GetCauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCauseResponse.Merge(dst, src)
}
func (m *GetCauseResponse) XXX_Size() int {
	return xxx_messageInfo_GetCauseResponse.Size(m)
}
func (m *GetCauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCauseResponse proto.InternalMessageInfo

func (m *GetCauseResponse) GetItem() *Cause {
	if m != nil {
		return m.Item
	}
	return nil
}

type ListCauseRequest struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	NotCompleted         bool     `protobuf:"varint,2,opt,name=not_completed,json=notCompleted,proto3" json:"not_completed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCauseRequest) Reset()         { *m = ListCauseRequest{} }
func (m *ListCauseRequest) String() string { return proto.CompactTextString(m) }
func (*ListCauseRequest) ProtoMessage()    {}
func (*ListCauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{7}
}
func (m *ListCauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCauseRequest.Unmarshal(m, b)
}
func (m *ListCauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCauseRequest.Marshal(b, m, deterministic)
}
func (dst *ListCauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCauseRequest.Merge(dst, src)
}
func (m *ListCauseRequest) XXX_Size() int {
	return xxx_messageInfo_ListCauseRequest.Size(m)
}
func (m *ListCauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCauseRequest proto.InternalMessageInfo

func (m *ListCauseRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListCauseRequest) GetNotCompleted() bool {
	if m != nil {
		return m.NotCompleted
	}
	return false
}

type ListCauseResponse struct {
	Items                []*Cause `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCauseResponse) Reset()         { *m = ListCauseResponse{} }
func (m *ListCauseResponse) String() string { return proto.CompactTextString(m) }
func (*ListCauseResponse) ProtoMessage()    {}
func (*ListCauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{8}
}
func (m *ListCauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCauseResponse.Unmarshal(m, b)
}
func (m *ListCauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCauseResponse.Marshal(b, m, deterministic)
}
func (dst *ListCauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCauseResponse.Merge(dst, src)
}
func (m *ListCauseResponse) XXX_Size() int {
	return xxx_messageInfo_ListCauseResponse.Size(m)
}
func (m *ListCauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCauseResponse proto.InternalMessageInfo

func (m *ListCauseResponse) GetItems() []*Cause {
	if m != nil {
		return m.Items
	}
	return nil
}

type DeleteCauseRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCauseRequest) Reset()         { *m = DeleteCauseRequest{} }
func (m *DeleteCauseRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCauseRequest) ProtoMessage()    {}
func (*DeleteCauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{9}
}
func (m *DeleteCauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCauseRequest.Unmarshal(m, b)
}
func (m *DeleteCauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCauseRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteCauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCauseRequest.Merge(dst, src)
}
func (m *DeleteCauseRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCauseRequest.Size(m)
}
func (m *DeleteCauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCauseRequest proto.InternalMessageInfo

func (m *DeleteCauseRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteCauseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCauseResponse) Reset()         { *m = DeleteCauseResponse{} }
func (m *DeleteCauseResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCauseResponse) ProtoMessage()    {}
func (*DeleteCauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{10}
}
func (m *DeleteCauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCauseResponse.Unmarshal(m, b)
}
func (m *DeleteCauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCauseResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteCauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCauseResponse.Merge(dst, src)
}
func (m *DeleteCauseResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCauseResponse.Size(m)
}
func (m *DeleteCauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCauseResponse proto.InternalMessageInfo

type UpdateCauseRequest struct {
	Item                 *Cause   `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCauseRequest) Reset()         { *m = UpdateCauseRequest{} }
func (m *UpdateCauseRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCauseRequest) ProtoMessage()    {}
func (*UpdateCauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{11}
}
func (m *UpdateCauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCauseRequest.Unmarshal(m, b)
}
func (m *UpdateCauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCauseRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateCauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCauseRequest.Merge(dst, src)
}
func (m *UpdateCauseRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCauseRequest.Size(m)
}
func (m *UpdateCauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCauseRequest proto.InternalMessageInfo

func (m *UpdateCauseRequest) GetItem() *Cause {
	if m != nil {
		return m.Item
	}
	return nil
}

type UpdateCauseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCauseResponse) Reset()         { *m = UpdateCauseResponse{} }
func (m *UpdateCauseResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCauseResponse) ProtoMessage()    {}
func (*UpdateCauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{12}
}
func (m *UpdateCauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCauseResponse.Unmarshal(m, b)
}
func (m *UpdateCauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCauseResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateCauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCauseResponse.Merge(dst, src)
}
func (m *UpdateCauseResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCauseResponse.Size(m)
}
func (m *UpdateCauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCauseResponse proto.InternalMessageInfo

type UpdateCausesRequest struct {
	Items                []*Cause `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCausesRequest) Reset()         { *m = UpdateCausesRequest{} }
func (m *UpdateCausesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCausesRequest) ProtoMessage()    {}
func (*UpdateCausesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{13}
}
func (m *UpdateCausesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCausesRequest.Unmarshal(m, b)
}
func (m *UpdateCausesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCausesRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateCausesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCausesRequest.Merge(dst, src)
}
func (m *UpdateCausesRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCausesRequest.Size(m)
}
func (m *UpdateCausesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCausesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCausesRequest proto.InternalMessageInfo

func (m *UpdateCausesRequest) GetItems() []*Cause {
	if m != nil {
		return m.Items
	}
	return nil
}

type UpdateCausesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCausesResponse) Reset()         { *m = UpdateCausesResponse{} }
func (m *UpdateCausesResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCausesResponse) ProtoMessage()    {}
func (*UpdateCausesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cause_3e72bdd6cd8f7df2, []int{14}
}
func (m *UpdateCausesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCausesResponse.Unmarshal(m, b)
}
func (m *UpdateCausesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCausesResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateCausesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCausesResponse.Merge(dst, src)
}
func (m *UpdateCausesResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCausesResponse.Size(m)
}
func (m *UpdateCausesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCausesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCausesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Cause)(nil), "cause.v1.Cause")
	proto.RegisterType((*CreateCauseRequest)(nil), "cause.v1.CreateCauseRequest")
	proto.RegisterType((*CreateCauseResponse)(nil), "cause.v1.CreateCauseResponse")
	proto.RegisterType((*CreateCausesRequest)(nil), "cause.v1.CreateCausesRequest")
	proto.RegisterType((*CreateCausesResponse)(nil), "cause.v1.CreateCausesResponse")
	proto.RegisterType((*GetCauseRequest)(nil), "cause.v1.GetCauseRequest")
	proto.RegisterType((*GetCauseResponse)(nil), "cause.v1.GetCauseResponse")
	proto.RegisterType((*ListCauseRequest)(nil), "cause.v1.ListCauseRequest")
	proto.RegisterType((*ListCauseResponse)(nil), "cause.v1.ListCauseResponse")
	proto.RegisterType((*DeleteCauseRequest)(nil), "cause.v1.DeleteCauseRequest")
	proto.RegisterType((*DeleteCauseResponse)(nil), "cause.v1.DeleteCauseResponse")
	proto.RegisterType((*UpdateCauseRequest)(nil), "cause.v1.UpdateCauseRequest")
	proto.RegisterType((*UpdateCauseResponse)(nil), "cause.v1.UpdateCauseResponse")
	proto.RegisterType((*UpdateCausesRequest)(nil), "cause.v1.UpdateCausesRequest")
	proto.RegisterType((*UpdateCausesResponse)(nil), "cause.v1.UpdateCausesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CauseServiceClient is the client API for CauseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CauseServiceClient interface {
	CreateCause(ctx context.Context, in *CreateCauseRequest, opts ...grpc.CallOption) (*CreateCauseResponse, error)
	// Bulk version of CreateCause
	CreateCauses(ctx context.Context, in *CreateCausesRequest, opts ...grpc.CallOption) (*CreateCausesResponse, error)
	GetCause(ctx context.Context, in *GetCauseRequest, opts ...grpc.CallOption) (*GetCauseResponse, error)
	ListCause(ctx context.Context, in *ListCauseRequest, opts ...grpc.CallOption) (*ListCauseResponse, error)
	DeleteCause(ctx context.Context, in *DeleteCauseRequest, opts ...grpc.CallOption) (*DeleteCauseResponse, error)
	UpdateCause(ctx context.Context, in *UpdateCauseRequest, opts ...grpc.CallOption) (*UpdateCauseResponse, error)
	UpdateCauses(ctx context.Context, in *UpdateCausesRequest, opts ...grpc.CallOption) (*UpdateCausesResponse, error)
}

type causeServiceClient struct {
	cc *grpc.ClientConn
}

func NewCauseServiceClient(cc *grpc.ClientConn) CauseServiceClient {
	return &causeServiceClient{cc}
}

func (c *causeServiceClient) CreateCause(ctx context.Context, in *CreateCauseRequest, opts ...grpc.CallOption) (*CreateCauseResponse, error) {
	out := new(CreateCauseResponse)
	err := c.cc.Invoke(ctx, "/cause.v1.CauseService/CreateCause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *causeServiceClient) CreateCauses(ctx context.Context, in *CreateCausesRequest, opts ...grpc.CallOption) (*CreateCausesResponse, error) {
	out := new(CreateCausesResponse)
	err := c.cc.Invoke(ctx, "/cause.v1.CauseService/CreateCauses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *causeServiceClient) GetCause(ctx context.Context, in *GetCauseRequest, opts ...grpc.CallOption) (*GetCauseResponse, error) {
	out := new(GetCauseResponse)
	err := c.cc.Invoke(ctx, "/cause.v1.CauseService/GetCause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *causeServiceClient) ListCause(ctx context.Context, in *ListCauseRequest, opts ...grpc.CallOption) (*ListCauseResponse, error) {
	out := new(ListCauseResponse)
	err := c.cc.Invoke(ctx, "/cause.v1.CauseService/ListCause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *causeServiceClient) DeleteCause(ctx context.Context, in *DeleteCauseRequest, opts ...grpc.CallOption) (*DeleteCauseResponse, error) {
	out := new(DeleteCauseResponse)
	err := c.cc.Invoke(ctx, "/cause.v1.CauseService/DeleteCause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *causeServiceClient) UpdateCause(ctx context.Context, in *UpdateCauseRequest, opts ...grpc.CallOption) (*UpdateCauseResponse, error) {
	out := new(UpdateCauseResponse)
	err := c.cc.Invoke(ctx, "/cause.v1.CauseService/UpdateCause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *causeServiceClient) UpdateCauses(ctx context.Context, in *UpdateCausesRequest, opts ...grpc.CallOption) (*UpdateCausesResponse, error) {
	out := new(UpdateCausesResponse)
	err := c.cc.Invoke(ctx, "/cause.v1.CauseService/UpdateCauses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CauseServiceServer is the server API for CauseService service.
type CauseServiceServer interface {
	CreateCause(context.Context, *CreateCauseRequest) (*CreateCauseResponse, error)
	// Bulk version of CreateCause
	CreateCauses(context.Context, *CreateCausesRequest) (*CreateCausesResponse, error)
	GetCause(context.Context, *GetCauseRequest) (*GetCauseResponse, error)
	ListCause(context.Context, *ListCauseRequest) (*ListCauseResponse, error)
	DeleteCause(context.Context, *DeleteCauseRequest) (*DeleteCauseResponse, error)
	UpdateCause(context.Context, *UpdateCauseRequest) (*UpdateCauseResponse, error)
	UpdateCauses(context.Context, *UpdateCausesRequest) (*UpdateCausesResponse, error)
}

func RegisterCauseServiceServer(s *grpc.Server, srv CauseServiceServer) {
	s.RegisterService(&_CauseService_serviceDesc, srv)
}

func _CauseService_CreateCause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CauseServiceServer).CreateCause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cause.v1.CauseService/CreateCause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CauseServiceServer).CreateCause(ctx, req.(*CreateCauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CauseService_CreateCauses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCausesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CauseServiceServer).CreateCauses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cause.v1.CauseService/CreateCauses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CauseServiceServer).CreateCauses(ctx, req.(*CreateCausesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CauseService_GetCause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CauseServiceServer).GetCause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cause.v1.CauseService/GetCause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CauseServiceServer).GetCause(ctx, req.(*GetCauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CauseService_ListCause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CauseServiceServer).ListCause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cause.v1.CauseService/ListCause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CauseServiceServer).ListCause(ctx, req.(*ListCauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CauseService_DeleteCause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CauseServiceServer).DeleteCause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cause.v1.CauseService/DeleteCause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CauseServiceServer).DeleteCause(ctx, req.(*DeleteCauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CauseService_UpdateCause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CauseServiceServer).UpdateCause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cause.v1.CauseService/UpdateCause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CauseServiceServer).UpdateCause(ctx, req.(*UpdateCauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CauseService_UpdateCauses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCausesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CauseServiceServer).UpdateCauses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cause.v1.CauseService/UpdateCauses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CauseServiceServer).UpdateCauses(ctx, req.(*UpdateCausesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CauseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cause.v1.CauseService",
	HandlerType: (*CauseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCause",
			Handler:    _CauseService_CreateCause_Handler,
		},
		{
			MethodName: "CreateCauses",
			Handler:    _CauseService_CreateCauses_Handler,
		},
		{
			MethodName: "GetCause",
			Handler:    _CauseService_GetCause_Handler,
		},
		{
			MethodName: "ListCause",
			Handler:    _CauseService_ListCause_Handler,
		},
		{
			MethodName: "DeleteCause",
			Handler:    _CauseService_DeleteCause_Handler,
		},
		{
			MethodName: "UpdateCause",
			Handler:    _CauseService_UpdateCause_Handler,
		},
		{
			MethodName: "UpdateCauses",
			Handler:    _CauseService_UpdateCauses_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cause.proto",
}

func init() { proto.RegisterFile("cause.proto", fileDescriptor_cause_3e72bdd6cd8f7df2) }

var fileDescriptor_cause_3e72bdd6cd8f7df2 = []byte{
	// 519 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x55, 0x52, 0x0c, 0xc9, 0x38, 0xb4, 0xc9, 0x24, 0x2d, 0xa9, 0x29, 0xa8, 0xb8, 0x54, 0xaa,
	0x2a, 0x11, 0xab, 0xe5, 0x80, 0x88, 0x7a, 0x22, 0x48, 0x5c, 0xe0, 0x62, 0x84, 0x10, 0x5c, 0x90,
	0x63, 0xaf, 0xca, 0x0a, 0xc7, 0x6b, 0xe2, 0x4d, 0x2e, 0x88, 0x0b, 0xbf, 0xc0, 0x2f, 0xf1, 0x07,
	0xfc, 0x02, 0x1f, 0x82, 0xbc, 0xbb, 0x6e, 0x76, 0xe3, 0x2d, 0x0a, 0xbd, 0xc5, 0x33, 0xf3, 0xde,
	0x9b, 0xd9, 0xf7, 0x14, 0x70, 0xe3, 0x68, 0x51, 0x90, 0x51, 0x3e, 0x67, 0x9c, 0x61, 0x4b, 0x7e,
	0x2c, 0xcf, 0xbc, 0x83, 0x4b, 0xc6, 0x2e, 0x53, 0x12, 0x44, 0x39, 0x0d, 0xa2, 0x2c, 0x63, 0x3c,
	0xe2, 0x94, 0x65, 0x85, 0x9c, 0xf3, 0x9f, 0x80, 0x33, 0x29, 0x27, 0x71, 0x1b, 0x9a, 0x34, 0x19,
	0x36, 0x0e, 0x1b, 0x27, 0xed, 0xb0, 0x49, 0x13, 0x1c, 0x80, 0xc3, 0x29, 0x4f, 0xc9, 0xb0, 0x29,
	0x4a, 0xf2, 0xc3, 0x7f, 0x0e, 0x38, 0x99, 0x93, 0x88, 0x13, 0x01, 0x0a, 0xc9, 0xd7, 0x05, 0x29,
	0x38, 0x1e, 0xc1, 0x2d, 0xca, 0xc9, 0x4c, 0xa0, 0xdd, 0xf3, 0x9d, 0x51, 0xa5, 0x3d, 0x92, 0x53,
	0xa2, 0xe9, 0x1f, 0x43, 0xdf, 0x80, 0x16, 0x39, 0xcb, 0xea, 0xba, 0xfe, 0x85, 0x31, 0x56, 0x54,
	0x12, 0xc7, 0xe0, 0x94, 0x2c, 0xc5, 0xb0, 0x71, 0xb8, 0x65, 0xd3, 0x90, 0x5d, 0xff, 0x04, 0x06,
	0x26, 0x5a, 0xa9, 0x74, 0x61, 0x8b, 0x26, 0x12, 0xdc, 0x0e, 0xcb, 0x9f, 0xfe, 0x23, 0xd8, 0x79,
	0x45, 0xb8, 0x71, 0xc6, 0xfa, 0x2a, 0xcf, 0xa0, 0xbb, 0x1a, 0x51, 0x44, 0x1b, 0x9d, 0xfa, 0x06,
	0xba, 0xaf, 0x69, 0x61, 0x92, 0x0f, 0xc0, 0x49, 0xe9, 0x8c, 0x72, 0x81, 0x74, 0x42, 0xf9, 0x81,
	0x47, 0x70, 0x37, 0x63, 0xfc, 0x53, 0xcc, 0x66, 0x79, 0x4a, 0x38, 0x49, 0xc4, 0x6b, 0xb7, 0xc2,
	0x4e, 0xc6, 0xf8, 0xa4, 0xaa, 0xf9, 0x63, 0xe8, 0x69, 0x74, 0x6a, 0x91, 0x0d, 0x1f, 0xe4, 0x31,
	0xe0, 0x4b, 0x52, 0xd2, 0xfc, 0xf3, 0xd2, 0x5d, 0xe8, 0x1b, 0x53, 0x52, 0xa3, 0x74, 0xfb, 0x5d,
	0x9e, 0xdc, 0xc8, 0xed, 0x5d, 0xe8, 0x1b, 0x50, 0xc5, 0x78, 0x61, 0x94, 0xff, 0xd7, 0xdd, 0x3d,
	0x18, 0x98, 0x68, 0xc9, 0x7a, 0xfe, 0xcb, 0x81, 0x8e, 0x28, 0xbd, 0x25, 0xf3, 0x25, 0x8d, 0x09,
	0xc6, 0xe0, 0x6a, 0x31, 0xc0, 0x03, 0x8d, 0xaf, 0x96, 0x5e, 0xef, 0xc1, 0x35, 0x5d, 0xb5, 0xf2,
	0xbd, 0x1f, 0xbf, 0xff, 0xfc, 0x6c, 0xf6, 0xfc, 0x76, 0xb0, 0x3c, 0x0b, 0xc4, 0xe4, 0x58, 0x9c,
	0x88, 0x9f, 0xa1, 0xa3, 0x67, 0x0d, 0xed, 0x3c, 0xd5, 0x8d, 0xde, 0xc3, 0xeb, 0xda, 0x4a, 0x67,
	0x5f, 0xe8, 0xf4, 0xfd, 0xed, 0x2b, 0x9d, 0x60, 0xba, 0x48, 0xbf, 0x8c, 0x1b, 0xa7, 0xf8, 0x01,
	0x5a, 0x55, 0x10, 0x71, 0x7f, 0x45, 0xb3, 0x96, 0x5f, 0xcf, 0xb3, 0xb5, 0x14, 0xfb, 0x9e, 0x60,
	0xef, 0xa2, 0xc6, 0xfe, 0x8d, 0x26, 0xdf, 0xf1, 0x3d, 0xb4, 0xaf, 0xb2, 0x85, 0x1a, 0xc1, 0x7a,
	0x7e, 0xbd, 0xfb, 0xd6, 0x9e, 0x62, 0xef, 0x09, 0x76, 0x17, 0x57, 0x6f, 0x84, 0x53, 0x70, 0xb5,
	0x48, 0xe9, 0x16, 0xd4, 0xf3, 0xa8, 0x5b, 0x60, 0xcb, 0xa1, 0x5a, 0xfe, 0x74, 0x7d, 0xf9, 0x18,
	0x5c, 0x2d, 0x0f, 0xba, 0x46, 0x3d, 0xb6, 0xba, 0x86, 0x2d, 0x99, 0xca, 0x66, 0xcf, 0x66, 0xb3,
	0x1e, 0x3a, 0xb4, 0xf3, 0xd8, 0x6c, 0xb6, 0x65, 0xb5, 0xb2, 0xd9, 0xab, 0xdb, 0xfc, 0xe2, 0xce,
	0x47, 0x47, 0x14, 0xa6, 0xb7, 0xc5, 0x7f, 0xf3, 0xd3, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe6,
	0x7d, 0x2e, 0x14, 0xd2, 0x05, 0x00, 0x00,
}
