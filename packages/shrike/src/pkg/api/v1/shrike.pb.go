// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shrike.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Cause struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cause) Reset()         { *m = Cause{} }
func (m *Cause) String() string { return proto.CompactTextString(m) }
func (*Cause) ProtoMessage()    {}
func (*Cause) Descriptor() ([]byte, []int) {
	return fileDescriptor_shrike_3e311ccd9b724169, []int{0}
}
func (m *Cause) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cause.Unmarshal(m, b)
}
func (m *Cause) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cause.Marshal(b, m, deterministic)
}
func (dst *Cause) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cause.Merge(dst, src)
}
func (m *Cause) XXX_Size() int {
	return xxx_messageInfo_Cause.Size(m)
}
func (m *Cause) XXX_DiscardUnknown() {
	xxx_messageInfo_Cause.DiscardUnknown(m)
}

var xxx_messageInfo_Cause proto.InternalMessageInfo

func (m *Cause) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Cause) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// Request and Response Message Types
type CreateCauseRequest struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Item                 *Cause   `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCauseRequest) Reset()         { *m = CreateCauseRequest{} }
func (m *CreateCauseRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCauseRequest) ProtoMessage()    {}
func (*CreateCauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_shrike_3e311ccd9b724169, []int{1}
}
func (m *CreateCauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCauseRequest.Unmarshal(m, b)
}
func (m *CreateCauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCauseRequest.Marshal(b, m, deterministic)
}
func (dst *CreateCauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCauseRequest.Merge(dst, src)
}
func (m *CreateCauseRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCauseRequest.Size(m)
}
func (m *CreateCauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCauseRequest proto.InternalMessageInfo

func (m *CreateCauseRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateCauseRequest) GetItem() *Cause {
	if m != nil {
		return m.Item
	}
	return nil
}

type CreateCauseResponse struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCauseResponse) Reset()         { *m = CreateCauseResponse{} }
func (m *CreateCauseResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCauseResponse) ProtoMessage()    {}
func (*CreateCauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_shrike_3e311ccd9b724169, []int{2}
}
func (m *CreateCauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCauseResponse.Unmarshal(m, b)
}
func (m *CreateCauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCauseResponse.Marshal(b, m, deterministic)
}
func (dst *CreateCauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCauseResponse.Merge(dst, src)
}
func (m *CreateCauseResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCauseResponse.Size(m)
}
func (m *CreateCauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCauseResponse proto.InternalMessageInfo

func (m *CreateCauseResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateCauseResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetCauseRequest struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCauseRequest) Reset()         { *m = GetCauseRequest{} }
func (m *GetCauseRequest) String() string { return proto.CompactTextString(m) }
func (*GetCauseRequest) ProtoMessage()    {}
func (*GetCauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_shrike_3e311ccd9b724169, []int{3}
}
func (m *GetCauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCauseRequest.Unmarshal(m, b)
}
func (m *GetCauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCauseRequest.Marshal(b, m, deterministic)
}
func (dst *GetCauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCauseRequest.Merge(dst, src)
}
func (m *GetCauseRequest) XXX_Size() int {
	return xxx_messageInfo_GetCauseRequest.Size(m)
}
func (m *GetCauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCauseRequest proto.InternalMessageInfo

func (m *GetCauseRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *GetCauseRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetCauseResponse struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Item                 *Cause   `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCauseResponse) Reset()         { *m = GetCauseResponse{} }
func (m *GetCauseResponse) String() string { return proto.CompactTextString(m) }
func (*GetCauseResponse) ProtoMessage()    {}
func (*GetCauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_shrike_3e311ccd9b724169, []int{4}
}
func (m *GetCauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCauseResponse.Unmarshal(m, b)
}
func (m *GetCauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCauseResponse.Marshal(b, m, deterministic)
}
func (dst *GetCauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCauseResponse.Merge(dst, src)
}
func (m *GetCauseResponse) XXX_Size() int {
	return xxx_messageInfo_GetCauseResponse.Size(m)
}
func (m *GetCauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCauseResponse proto.InternalMessageInfo

func (m *GetCauseResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *GetCauseResponse) GetItem() *Cause {
	if m != nil {
		return m.Item
	}
	return nil
}

type ListCauseRequest struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCauseRequest) Reset()         { *m = ListCauseRequest{} }
func (m *ListCauseRequest) String() string { return proto.CompactTextString(m) }
func (*ListCauseRequest) ProtoMessage()    {}
func (*ListCauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_shrike_3e311ccd9b724169, []int{5}
}
func (m *ListCauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCauseRequest.Unmarshal(m, b)
}
func (m *ListCauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCauseRequest.Marshal(b, m, deterministic)
}
func (dst *ListCauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCauseRequest.Merge(dst, src)
}
func (m *ListCauseRequest) XXX_Size() int {
	return xxx_messageInfo_ListCauseRequest.Size(m)
}
func (m *ListCauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCauseRequest proto.InternalMessageInfo

func (m *ListCauseRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ListCauseRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListCauseResponse struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Items                []*Cause `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCauseResponse) Reset()         { *m = ListCauseResponse{} }
func (m *ListCauseResponse) String() string { return proto.CompactTextString(m) }
func (*ListCauseResponse) ProtoMessage()    {}
func (*ListCauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_shrike_3e311ccd9b724169, []int{6}
}
func (m *ListCauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCauseResponse.Unmarshal(m, b)
}
func (m *ListCauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCauseResponse.Marshal(b, m, deterministic)
}
func (dst *ListCauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCauseResponse.Merge(dst, src)
}
func (m *ListCauseResponse) XXX_Size() int {
	return xxx_messageInfo_ListCauseResponse.Size(m)
}
func (m *ListCauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCauseResponse proto.InternalMessageInfo

func (m *ListCauseResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ListCauseResponse) GetItems() []*Cause {
	if m != nil {
		return m.Items
	}
	return nil
}

// Request data to update cause
type UpdateCauseRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Task entity to update
	Item                 *Cause   `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCauseRequest) Reset()         { *m = UpdateCauseRequest{} }
func (m *UpdateCauseRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCauseRequest) ProtoMessage()    {}
func (*UpdateCauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_shrike_3e311ccd9b724169, []int{7}
}
func (m *UpdateCauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCauseRequest.Unmarshal(m, b)
}
func (m *UpdateCauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCauseRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateCauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCauseRequest.Merge(dst, src)
}
func (m *UpdateCauseRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCauseRequest.Size(m)
}
func (m *UpdateCauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCauseRequest proto.InternalMessageInfo

func (m *UpdateCauseRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *UpdateCauseRequest) GetItem() *Cause {
	if m != nil {
		return m.Item
	}
	return nil
}

// Contains status of update operation
type UpdateCauseResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Contains number of entities have beed updated
	// Equals 1 in case of succesfull update
	Updated              int64    `protobuf:"varint,2,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCauseResponse) Reset()         { *m = UpdateCauseResponse{} }
func (m *UpdateCauseResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCauseResponse) ProtoMessage()    {}
func (*UpdateCauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_shrike_3e311ccd9b724169, []int{8}
}
func (m *UpdateCauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCauseResponse.Unmarshal(m, b)
}
func (m *UpdateCauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCauseResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateCauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCauseResponse.Merge(dst, src)
}
func (m *UpdateCauseResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCauseResponse.Size(m)
}
func (m *UpdateCauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCauseResponse proto.InternalMessageInfo

func (m *UpdateCauseResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *UpdateCauseResponse) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

// Request data to delete cause
type DeleteCauseRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Unique integer identifier of the cause to delete
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCauseRequest) Reset()         { *m = DeleteCauseRequest{} }
func (m *DeleteCauseRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCauseRequest) ProtoMessage()    {}
func (*DeleteCauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_shrike_3e311ccd9b724169, []int{9}
}
func (m *DeleteCauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCauseRequest.Unmarshal(m, b)
}
func (m *DeleteCauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCauseRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteCauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCauseRequest.Merge(dst, src)
}
func (m *DeleteCauseRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCauseRequest.Size(m)
}
func (m *DeleteCauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCauseRequest proto.InternalMessageInfo

func (m *DeleteCauseRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteCauseRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Contains status of delete operation
type DeleteCauseResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Contains number of entities have beed deleted
	// Equals 1 in case of succesfull delete
	Deleted              int64    `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCauseResponse) Reset()         { *m = DeleteCauseResponse{} }
func (m *DeleteCauseResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCauseResponse) ProtoMessage()    {}
func (*DeleteCauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_shrike_3e311ccd9b724169, []int{10}
}
func (m *DeleteCauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCauseResponse.Unmarshal(m, b)
}
func (m *DeleteCauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCauseResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteCauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCauseResponse.Merge(dst, src)
}
func (m *DeleteCauseResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCauseResponse.Size(m)
}
func (m *DeleteCauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCauseResponse proto.InternalMessageInfo

func (m *DeleteCauseResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteCauseResponse) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

func init() {
	proto.RegisterType((*Cause)(nil), "shrike.v1.Cause")
	proto.RegisterType((*CreateCauseRequest)(nil), "shrike.v1.CreateCauseRequest")
	proto.RegisterType((*CreateCauseResponse)(nil), "shrike.v1.CreateCauseResponse")
	proto.RegisterType((*GetCauseRequest)(nil), "shrike.v1.GetCauseRequest")
	proto.RegisterType((*GetCauseResponse)(nil), "shrike.v1.GetCauseResponse")
	proto.RegisterType((*ListCauseRequest)(nil), "shrike.v1.ListCauseRequest")
	proto.RegisterType((*ListCauseResponse)(nil), "shrike.v1.ListCauseResponse")
	proto.RegisterType((*UpdateCauseRequest)(nil), "shrike.v1.UpdateCauseRequest")
	proto.RegisterType((*UpdateCauseResponse)(nil), "shrike.v1.UpdateCauseResponse")
	proto.RegisterType((*DeleteCauseRequest)(nil), "shrike.v1.DeleteCauseRequest")
	proto.RegisterType((*DeleteCauseResponse)(nil), "shrike.v1.DeleteCauseResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShrikeServiceClient is the client API for ShrikeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShrikeServiceClient interface {
	// CreateCause takes a cause object to create.
	CreateCause(ctx context.Context, in *CreateCauseRequest, opts ...grpc.CallOption) (*CreateCauseResponse, error)
	// GetCause takes an id and returns a single cause.
	GetCause(ctx context.Context, in *GetCauseRequest, opts ...grpc.CallOption) (*GetCauseResponse, error)
	// List cause, takes filters, limit, and cursor param.
	ListCause(ctx context.Context, in *ListCauseRequest, opts ...grpc.CallOption) (*ListCauseResponse, error)
	// Update cause
	UpdateCause(ctx context.Context, in *UpdateCauseRequest, opts ...grpc.CallOption) (*UpdateCauseResponse, error)
	// Delete cause
	DeleteCause(ctx context.Context, in *DeleteCauseRequest, opts ...grpc.CallOption) (*DeleteCauseResponse, error)
}

type shrikeServiceClient struct {
	cc *grpc.ClientConn
}

func NewShrikeServiceClient(cc *grpc.ClientConn) ShrikeServiceClient {
	return &shrikeServiceClient{cc}
}

func (c *shrikeServiceClient) CreateCause(ctx context.Context, in *CreateCauseRequest, opts ...grpc.CallOption) (*CreateCauseResponse, error) {
	out := new(CreateCauseResponse)
	err := c.cc.Invoke(ctx, "/shrike.v1.ShrikeService/CreateCause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shrikeServiceClient) GetCause(ctx context.Context, in *GetCauseRequest, opts ...grpc.CallOption) (*GetCauseResponse, error) {
	out := new(GetCauseResponse)
	err := c.cc.Invoke(ctx, "/shrike.v1.ShrikeService/GetCause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shrikeServiceClient) ListCause(ctx context.Context, in *ListCauseRequest, opts ...grpc.CallOption) (*ListCauseResponse, error) {
	out := new(ListCauseResponse)
	err := c.cc.Invoke(ctx, "/shrike.v1.ShrikeService/ListCause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shrikeServiceClient) UpdateCause(ctx context.Context, in *UpdateCauseRequest, opts ...grpc.CallOption) (*UpdateCauseResponse, error) {
	out := new(UpdateCauseResponse)
	err := c.cc.Invoke(ctx, "/shrike.v1.ShrikeService/UpdateCause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shrikeServiceClient) DeleteCause(ctx context.Context, in *DeleteCauseRequest, opts ...grpc.CallOption) (*DeleteCauseResponse, error) {
	out := new(DeleteCauseResponse)
	err := c.cc.Invoke(ctx, "/shrike.v1.ShrikeService/DeleteCause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShrikeServiceServer is the server API for ShrikeService service.
type ShrikeServiceServer interface {
	// CreateCause takes a cause object to create.
	CreateCause(context.Context, *CreateCauseRequest) (*CreateCauseResponse, error)
	// GetCause takes an id and returns a single cause.
	GetCause(context.Context, *GetCauseRequest) (*GetCauseResponse, error)
	// List cause, takes filters, limit, and cursor param.
	ListCause(context.Context, *ListCauseRequest) (*ListCauseResponse, error)
	// Update cause
	UpdateCause(context.Context, *UpdateCauseRequest) (*UpdateCauseResponse, error)
	// Delete cause
	DeleteCause(context.Context, *DeleteCauseRequest) (*DeleteCauseResponse, error)
}

func RegisterShrikeServiceServer(s *grpc.Server, srv ShrikeServiceServer) {
	s.RegisterService(&_ShrikeService_serviceDesc, srv)
}

func _ShrikeService_CreateCause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShrikeServiceServer).CreateCause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shrike.v1.ShrikeService/CreateCause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShrikeServiceServer).CreateCause(ctx, req.(*CreateCauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShrikeService_GetCause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShrikeServiceServer).GetCause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shrike.v1.ShrikeService/GetCause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShrikeServiceServer).GetCause(ctx, req.(*GetCauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShrikeService_ListCause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShrikeServiceServer).ListCause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shrike.v1.ShrikeService/ListCause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShrikeServiceServer).ListCause(ctx, req.(*ListCauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShrikeService_UpdateCause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShrikeServiceServer).UpdateCause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shrike.v1.ShrikeService/UpdateCause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShrikeServiceServer).UpdateCause(ctx, req.(*UpdateCauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShrikeService_DeleteCause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShrikeServiceServer).DeleteCause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shrike.v1.ShrikeService/DeleteCause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShrikeServiceServer).DeleteCause(ctx, req.(*DeleteCauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShrikeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shrike.v1.ShrikeService",
	HandlerType: (*ShrikeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCause",
			Handler:    _ShrikeService_CreateCause_Handler,
		},
		{
			MethodName: "GetCause",
			Handler:    _ShrikeService_GetCause_Handler,
		},
		{
			MethodName: "ListCause",
			Handler:    _ShrikeService_ListCause_Handler,
		},
		{
			MethodName: "UpdateCause",
			Handler:    _ShrikeService_UpdateCause_Handler,
		},
		{
			MethodName: "DeleteCause",
			Handler:    _ShrikeService_DeleteCause_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shrike.proto",
}

func init() { proto.RegisterFile("shrike.proto", fileDescriptor_shrike_3e311ccd9b724169) }

var fileDescriptor_shrike_3e311ccd9b724169 = []byte{
	// 636 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0x96, 0x9d, 0xa6, 0xfd, 0x33, 0xf9, 0x5b, 0xd2, 0x4d, 0x85, 0x22, 0x53, 0x90, 0x65, 0xa1,
	0xaa, 0x8a, 0xa8, 0xdd, 0xa4, 0x15, 0xa0, 0x70, 0xa1, 0x14, 0x84, 0x84, 0xca, 0xc5, 0x15, 0x07,
	0xda, 0x93, 0x63, 0x8f, 0xec, 0x05, 0xc7, 0x6b, 0xbc, 0xeb, 0x14, 0x09, 0xf5, 0xc2, 0x81, 0x07,
	0x80, 0x5b, 0xdf, 0x86, 0x23, 0x67, 0x5e, 0x81, 0x07, 0x41, 0x59, 0x3b, 0xa9, 0x9d, 0x38, 0x94,
	0x03, 0x27, 0x7b, 0x76, 0xe6, 0xfb, 0xe6, 0xdb, 0x99, 0x4f, 0x0b, 0xff, 0xf3, 0x20, 0xa1, 0xef,
	0xd1, 0x8c, 0x13, 0x26, 0x18, 0x69, 0xe4, 0xd1, 0xb8, 0xa7, 0x6d, 0xfb, 0x8c, 0xf9, 0x21, 0x5a,
	0x4e, 0x4c, 0x2d, 0x27, 0x8a, 0x98, 0x70, 0x04, 0x65, 0x11, 0xcf, 0x0a, 0xb5, 0x07, 0xf2, 0xe3,
	0xee, 0xf9, 0x18, 0xed, 0xf1, 0x0b, 0xc7, 0xf7, 0x31, 0xb1, 0x58, 0x2c, 0x2b, 0x16, 0xab, 0x8d,
	0x3d, 0xa8, 0x1f, 0x3b, 0x29, 0x47, 0xb2, 0x01, 0x2a, 0xf5, 0x3a, 0x8a, 0xae, 0xec, 0xd6, 0x6c,
	0x95, 0x7a, 0x64, 0x0b, 0xea, 0x82, 0x8a, 0x10, 0x3b, 0xaa, 0xae, 0xec, 0x36, 0xec, 0x2c, 0x30,
	0x4e, 0x80, 0x1c, 0x27, 0xe8, 0x08, 0x94, 0x20, 0x1b, 0x3f, 0xa4, 0xc8, 0x05, 0x69, 0x41, 0xcd,
	0x89, 0xa9, 0x04, 0x37, 0xec, 0xc9, 0x2f, 0xb9, 0x0f, 0x2b, 0x54, 0xe0, 0x48, 0x82, 0x9b, 0xfd,
	0x96, 0x39, 0x13, 0x6f, 0x66, 0x40, 0x99, 0x35, 0x1e, 0x41, 0xbb, 0xc4, 0xc6, 0x63, 0x16, 0x71,
	0xac, 0xa0, 0xcb, 0xc4, 0xa9, 0x53, 0x71, 0xc6, 0x01, 0xdc, 0x7a, 0x89, 0xe2, 0x06, 0x0d, 0xf3,
	0xa0, 0x57, 0xd0, 0xba, 0x06, 0x2d, 0x6d, 0xf5, 0x77, 0xca, 0x07, 0xd0, 0x3a, 0xa1, 0xfc, 0x26,
	0x05, 0x5b, 0x50, 0x0f, 0xe9, 0x88, 0x0a, 0x49, 0x56, 0xb7, 0xb3, 0xc0, 0x78, 0x0d, 0x9b, 0x05,
	0xec, 0x52, 0x21, 0x3b, 0x50, 0x9f, 0xb4, 0xe2, 0x1d, 0x55, 0xaf, 0x55, 0x2a, 0xc9, 0xd2, 0x93,
	0x95, 0xbc, 0x89, 0xbd, 0x7f, 0xb5, 0x92, 0x23, 0x68, 0x97, 0xd8, 0x96, 0xca, 0xeb, 0xc0, 0x5a,
	0x2a, 0x0b, 0xa7, 0x23, 0x9e, 0x86, 0xc6, 0x43, 0x20, 0xcf, 0x31, 0xc4, 0x1b, 0x05, 0xcd, 0xef,
	0xe7, 0x08, 0xda, 0x25, 0xdc, 0x9f, 0x5a, 0x7b, 0xb2, 0x70, 0xd6, 0x3a, 0x0f, 0xfb, 0x57, 0x2b,
	0xb0, 0x7e, 0x2a, 0xef, 0x75, 0x8a, 0xc9, 0x98, 0xba, 0x48, 0x86, 0xd0, 0x2c, 0x58, 0x8c, 0xdc,
	0x2d, 0x5e, 0x7b, 0xc1, 0xc8, 0xda, 0xbd, 0x65, 0xe9, 0x4c, 0x8b, 0xb1, 0xf5, 0xf9, 0xe7, 0xaf,
	0x6f, 0xea, 0x86, 0xd1, 0xb0, 0xc6, 0x3d, 0xcb, 0x9d, 0xa4, 0x06, 0x4a, 0x97, 0x9c, 0xc3, 0x7f,
	0x53, 0x63, 0x11, 0xad, 0xc0, 0x30, 0x67, 0x51, 0xed, 0x4e, 0x65, 0x2e, 0xa7, 0xbe, 0x2d, 0xa9,
	0x5b, 0x64, 0x63, 0x46, 0x6d, 0x7d, 0xa2, 0xde, 0x25, 0x79, 0x0b, 0x8d, 0x99, 0x5b, 0x48, 0x91,
	0x61, 0xde, 0x7f, 0xda, 0x76, 0x75, 0x32, 0xe7, 0xdf, 0x94, 0xfc, 0x4d, 0x72, 0x2d, 0x9d, 0x7c,
	0x51, 0xa0, 0x59, 0x58, 0x76, 0x69, 0x38, 0x8b, 0x96, 0x2a, 0x0d, 0xa7, 0xc2, 0x23, 0xc6, 0x63,
	0xd9, 0xa1, 0xaf, 0xb5, 0x8b, 0x37, 0x10, 0x38, 0x32, 0xa9, 0x77, 0x39, 0x50, 0xba, 0x67, 0x9d,
	0xfe, 0x92, 0x0c, 0xf1, 0xa0, 0x59, 0xd8, 0x7c, 0x49, 0xc7, 0xa2, 0x93, 0x4a, 0x3a, 0x2a, 0x0c,
	0x33, 0x9d, 0x64, 0x77, 0x6e, 0x92, 0xcf, 0x7e, 0x28, 0x5f, 0x8f, 0xbe, 0x2b, 0xe4, 0x1c, 0xd6,
	0x65, 0xbd, 0xce, 0x33, 0x8b, 0x18, 0x2f, 0x60, 0x8d, 0xc5, 0x18, 0x8d, 0xd8, 0x90, 0xec, 0x04,
	0x42, 0xc4, 0x7c, 0x60, 0x59, 0x3e, 0x15, 0x41, 0x3a, 0x34, 0x5d, 0x36, 0xb2, 0x4e, 0x05, 0x8e,
	0xf1, 0xd8, 0xe1, 0x22, 0x44, 0x2b, 0xaf, 0xd3, 0x08, 0x17, 0x18, 0x07, 0x18, 0x3d, 0xcd, 0x0f,
	0xcc, 0x94, 0xf7, 0x6b, 0x3d, 0x73, 0xbf, 0xab, 0x28, 0xfd, 0x96, 0x13, 0xc7, 0x21, 0x75, 0xe5,
	0x2b, 0x6b, 0xbd, 0xe3, 0x2c, 0x1a, 0x2c, 0x9c, 0xd8, 0x4f, 0xa0, 0x76, 0xb8, 0x7f, 0x48, 0x0e,
	0xa1, 0x6b, 0xa3, 0x48, 0x93, 0x08, 0x3d, 0xfd, 0x22, 0xc0, 0x48, 0x17, 0x01, 0xea, 0x09, 0x72,
	0x96, 0x26, 0x2e, 0xea, 0x1e, 0x43, 0xae, 0x47, 0x4c, 0xe8, 0xf8, 0x91, 0x72, 0x61, 0x92, 0x55,
	0x58, 0xb9, 0x52, 0x95, 0xb5, 0x33, 0x75, 0xdc, 0x1b, 0xae, 0xca, 0xd7, 0xfb, 0xe0, 0x77, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xd4, 0x1d, 0x19, 0x53, 0x24, 0x06, 0x00, 0x00,
}
