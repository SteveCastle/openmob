
type ACL @model {
  id: String!
  createdAt: String!
  updatedAt: String!
}
​
type MailingAddress @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  streetAddress: String!
  city: String!
  state: String!
  zipCode: String!
}
​
type PhoneNumber @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  phoneNumber: String!
}
​
type EmailAddress @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  address: String!
}
​
type Photo @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  imgURL: String!
}
​
type LayoutType @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type LayoutRow @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  layout: String!
}
​
type ComponentImplementation @model {
  id: String!
  createdAt: String!
  updatedAt: String!
}
​
type ComponentType @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type LayoutColumn @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  layoutRow: String!
}
​
type FieldType @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type Component @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  componentType: String!
  layoutColumn: String!
}
​
type Field @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  fieldType: String!
  component: String!
}
​
type Layout @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  layoutType: String!
}
​
type LandingPage @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
  cause: String!
  layout: String!
}
​
type Experiment @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
  landingPage: String!
}
​
type Issue @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
  election: String!
}
​
type Candidate @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  election: String!
}
​
type DistrictType @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type District @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  geom: String!
  title: String!
  districtType: String!
}
​
type Office @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
  election: String!
}
​
type VolunteerOpportunityType @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type LiveEventType @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type Company @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type ProductType @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type CustomerCart @model {
  id: String!
  createdAt: String!
  updatedAt: String!
}
​
type Payment @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  customerOrder: String!
}
​
type Delivery @model {
  id: String!
  createdAt: String!
  updatedAt: String!
}
​
type Boycott @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type BoycottMembership @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  cause: String!
  boycott: String!
}
​
type Election @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type ElectionMembership @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  cause: String!
  election: String!
}
​
type PetitionMembership @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  cause: String!
  petition: String!
}
​
type PollMembership @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  cause: String!
  petition: String!
}
​
type VolunteerOpportunityMembership @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  cause: String!
  volunteerOpportunity: String!
}
​
type LiveEventMembership @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  cause: String!
  liveEvent: String!
}
​
type Product @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
  productType: String!
}
​
type ProductMembership @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  cause: String!
  product: String!
}
​
type DonationCampaign @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type DonationCampaignMembership @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  cause: String!
  donationCampaign: String!
}
​
type Petition @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type PetitionSigner @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  petition: String!
  contact: String!
  cause: String!
}
​
type Poll @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type PollRespondant @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  poll: String!
  contact: String!
  cause: String!
}
​
type Purchaser @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  customerOrder: String!
  contact: String!
  cause: String!
}
​
type CustomerOrder @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  customerCart: String!
}
​
type Donor @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  customerOrder: String!
  contact: String!
  cause: String!
}
​
type LiveEvent @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
  liveEventType: String!
}
​
type EventAttendee @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  liveEvent: String!
  contact: String!
  cause: String!
}
​
type Voter @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  contact: String!
  cause: String!
}
​
type VolunteerOpportunity @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
  electionType: String!
}
​
type Volunteer @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  volunteerOpportunity: String!
  contact: String!
  cause: String!
}
​
type Territory @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type Follower @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  contact: String!
  cause: String!
}
​
type ActivityType @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type Activity @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
  activityType: String!
  contact: String!
  cause: String!
}
​
type Note @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  contact: String!
  cause: String!
  body: String!
}
​
type Account @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  username: String!
}
​
type OwnerMembership @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  cause: String!
  account: String!
}
​
type Contact @model {
  id: String!
  createdAt: String!
  updatedAt: String!
}
​
type ContactMembership @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  cause: String!
  contact: String!
}
​
type Cause @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  title: String!
  summary: String!
}
​
type Agent @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  account: String!
}
​
type AgentMembership @model {
  id: String!
  createdAt: String!
  updatedAt: String!
  cause: String!
  agent: String!
}
​