
type ACL @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
}
​
type MailingAddress @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  streetAddress: String!
  city: String!
  state: String!
  zipCode: String!
}
​
type PhoneNumber @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  phoneNumber: String!
}
​
type EmailAddress @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  address: String!
}
​
type Photo @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  imgURL: String!
}
​
type LayoutType @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type LayoutRow @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  layout: Int!
}
​
type ComponentImplementation @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
}
​
type ComponentType @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type LayoutColumn @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  layoutRow: Int!
}
​
type FieldType @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type Component @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  componentType: Int!
  layoutColumn: Int
}
​
type Field @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  fieldType: Int!
  component: Int
}
​
type Layout @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  layoutType: Int
}
​
type LandingPage @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
  cause: Int!
  layout: Int
}
​
type Experiment @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
  landingPage: Int
}
​
type Issue @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
  election: Int!
}
​
type Candidate @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  election: Int!
}
​
type DistrictType @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type District @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  geom: Float
  title: String!
  districtType: Int!
}
​
type Office @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
  election: Int
}
​
type VolunteerOpportunityType @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type LiveEventType @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type Company @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type ProductType @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type CustomerCart @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
}
​
type Payment @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  customerOrder: Int!
}
​
type Delivery @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
}
​
type Boycott @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type BoycottMembership @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  cause: Int!
  boycott: Int!
}
​
type Election @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type ElectionMembership @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  cause: Int!
  election: Int!
}
​
type PetitionMembership @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  cause: Int!
  petition: Int!
}
​
type PollMembership @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  cause: Int!
  petition: Int!
}
​
type VolunteerOpportunityMembership @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  cause: Int!
  volunteerOpportunity: Int!
}
​
type LiveEventMembership @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  cause: Int!
  liveEvent: Int!
}
​
type Product @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
  productType: Int!
}
​
type ProductMembership @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  cause: Int!
  product: Int!
}
​
type DonationCampaign @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type DonationCampaignMembership @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  cause: Int!
  donationCampaign: Int!
}
​
type Petition @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type PetitionSigner @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  petition: Int!
  contact: Int!
  cause: Int!
}
​
type Poll @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type PollRespondant @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  poll: Int!
  contact: Int!
  cause: Int!
}
​
type Purchaser @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  customerOrder: Int!
  contact: Int!
  cause: Int!
}
​
type CustomerOrder @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  customerCart: Int!
}
​
type Donor @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  customerOrder: Int!
  contact: Int!
  cause: Int!
}
​
type LiveEvent @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
  liveEventType: Int!
}
​
type EventAttendee @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  liveEvent: Int!
  contact: Int!
  cause: Int!
}
​
type Voter @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  contact: Int!
  cause: Int!
}
​
type VolunteerOpportunity @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
  electionType: Int
}
​
type Volunteer @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  volunteerOpportunity: Int!
  contact: Int!
  cause: Int!
}
​
type Territory @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type Follower @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  contact: Int!
  cause: Int!
}
​
type ActivityType @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
}
​
type Activity @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
  activityType: Int!
  contact: Int!
  cause: Int!
}
​
type Note @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  contact: Int!
  cause: Int!
  body: String
}
​
type Account @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  username: String!
}
​
type OwnerMembership @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  cause: Int!
  account: Int!
}
​
type Contact @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
}
​
type ContactMembership @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  cause: Int!
  contact: Int!
}
​
type Cause @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
  summary: String
}
​
type Agent @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  account: Int!
}
​
type AgentMembership @model {
  id: ID!
  createdAt: String!
  updatedAt: String!
  cause: Int!
  agent: Int!
}
​